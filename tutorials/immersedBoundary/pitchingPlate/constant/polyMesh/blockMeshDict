/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     4.0                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(

(    -0.1    -0.2    0    )
(    -0.015    -0.2    0    )
(    0.4    -0.2    0    )
(    0.5    -0.2    0    )
(    -0.1    -0.05    0    )
(    -0.015    -0.05    0    )
(    0.4    -0.05    0    )
(    0.5    -0.05    0    )
(    -0.1    0.05    0    )
(    -0.015    0.05    0    )
(    0.4    0.05    0    )
(    0.5    0.05    0    )
(    -0.1    0.2    0    )
(    -0.015    0.2    0    )
(    0.4    0.2    0    )
(    0.5    0.2    0    )

(    -0.1    -0.2    0.001    )
(    -0.015    -0.2    0.001    )
(    0.4    -0.2    0.001    )
(    0.5    -0.2    0.001    )
(    -0.1    -0.05    0.001    )
(    -0.015    -0.05    0.001    )
(    0.4    -0.05    0.001    )
(    0.5    -0.05    0.001    )
(    -0.1    0.05    0.001    )
(    -0.015    0.05    0.001    )
(    0.4    0.05    0.001    )
(    0.5    0.05    0.001    )
(    -0.1    0.2    0.001    )
(    -0.015    0.2    0.001    )
(    0.4    0.2    0.001    )
(    0.5    0.2    0.001    )




);

blocks
(

hex    (    8    9    13    12    24    25    29    28    )    (    44    54    1    )    simpleGrading    (    0.1111111111    14    1    )
hex    (    9    10    14    13    25    26    30    29    )    (    830    54    1    )    simpleGrading    (    1    14    1    )
hex    (    10    11    15    14    26    27    31    30    )    (    47    54    1    )    simpleGrading    (    10    14    1    )
hex    (    4    5    9    8    20    21    25    24    )    (    44    200    1    )    simpleGrading    (    0.1111111111    1    1    )
hex    (    5    6    10    9    21    22    26    25    )    (    830    200    1    )    simpleGrading    (    1    1    1    )
hex    (    6    7    11    10    22    23    27    26    )    (    47    200    1    )    simpleGrading    (    10    1    1    )
hex    (    0    1    5    4    16    17    21    20    )    (    44    76    1    )    simpleGrading    (    0.1111111111    0.1111111111    1    )
hex    (    1    2    6    5    17    18    22    21    )    (    830    76    1    )    simpleGrading    (    1    0.1111111111    1    )
hex    (    2    3    7    6    18    19    23    22    )    (    47    76    1    )    simpleGrading    (    10    0.1111111111    1    )


);

edges
(
);

patches
(
   patch  input
    (

(    0    16    20    4    )
(    4    20    24    8    )
(    8    24    28    12    )

    )

    patch output
    (
(    19    3    7    23    )
(    23    7    11    27    )
(    27    11    15    31    )

    )

    wall fixedWalls
    (

(    12    28    29    13    )
(    13    29    30    14    )
(    14    30    31    15    )

(    0    1    17    16    )
(    1    2    18    17    )
(    2    3    19    18    )


    )
    empty frontAndBack
    (

(    0    4    5    1    )
(    1    5    6    2    )
(    2    6    7    3    )
(    4    8    9    5    )
(    5    9    10    6    )
(    6    10    11    7    )
(    8    12    13    9    )
(    9    13    14    10    )
(    10    14    15    11    )

(    16    17    21    20    )
(    17    18    22    21    )
(    18    19    23    22    )
(    20    21    25    24    )
(    21    22    26    25    )
(    22    23    27    26    )
(    24    25    29    28    )
(    25    26    30    29    )
(    26    27    31    30    )


    )
);

mergePatchPairs
(
    //(0 4 7 3)
    //(1 5 6 2)
);


// ************************************************************************* //
