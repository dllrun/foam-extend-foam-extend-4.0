/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     4.0                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application icoDyMFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         40;

deltaT          0.001;

// writeControl    timeStep;
writeControl runTime;

writeInterval 0.005;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

runTimeModifiable yes;

adjustTimeStep  no;

maxCo           0.2;

libs
(
    "libdynamicFvMesh.so"
    "libimmersedBoundary.so"
    "libimmersedBoundaryDynamicFvMesh.so"
    "liblduSolvers.so"
);


functions
(
    forces
    {
        type               immersedBoundaryForces;
        functionObjectLibs ("libimmersedBoundaryForceFunctionObject.so");

        outputControl timeStep;
        outputInterval 1;
        patches ( ibCylinder );

        pName       p;
        UName       U;
        rhoName     rhoInf;
        rhoInf      1;

        log         true;
        CofR        ( 0 0 0 );

        Aref 0.05;
        Uref 1;
    }
);


// libs ( "libimmersedBoundary.so");

// functions
// (
//     forces
//     {
//         type               immersedBoundaryForces;
//         functionObjectLibs ("libimmersedBoundaryForceFunctionObject.so");

//         outputControl timeStep;
//         outputInterval 1;
//         patches ( ibCylinder );

//         pName       p;
//         UName       U;
//         rhoName     rhoInf;
//         rhoInf      1;

//         log         true;
//         CofR        ( 0 0 0 );

//         Aref 0.05;
//         Uref 1;
//     }
// );


// ************************************************************************* //
